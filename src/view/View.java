/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package view;

import MainComponents.Mission;
import MainComponents.MissionPanel;
import MainComponents.Submission;
import controller.Controller;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author seb
 */
public class View extends JFrame implements ViewBehaviour {
    
    /**
     *
     * Initializes the applet View
     */
    
    private Controller controller;
    
    private StyledDocument hackerView, infoView;
    private Style  errorStyle, succeedStyle, infoStyle, attackStyle, cmdStyle;
    
    private boolean mission2FirstVisit;
    private boolean dictInitialize ;
    
    private String dictionnary;
    private MissionPanel mp;
    
    /****************************************************************/
    /******************** CONSTRUCTOR *******************************/
    /****************************************************************/
    
    public View(Controller ctrl){
        
        this.setController(ctrl);
        initComponents();
        getController().setView(this);
        
        mission2FirstVisit = true;
        dictInitialize = false ;
        
        
        infoView = infoPane.getStyledDocument();
        errorStyle = infoPane.addStyle("errStyle", null);
        infoStyle = infoPane.addStyle("infoStyle", null);
        succeedStyle = infoPane.addStyle("suceedStyle",null);
        
        hackerView = hackerPane.getStyledDocument();
        attackStyle = hackerPane.addStyle("attackStyle",null);
        cmdStyle = hackerPane.addStyle("cmdStyle",null);
        
        StyleConstants.setForeground(infoStyle, Color.BLACK);
        StyleConstants.setForeground(succeedStyle, Color.GREEN);
        StyleConstants.setForeground(errorStyle, Color.RED);
        StyleConstants.setForeground(attackStyle,Color.DARK_GRAY);
        StyleConstants.setForeground(cmdStyle,Color.GRAY);
        
        entryPanel.setVisible(true);
        fullPanel.setVisible(false);
        endPanel.setVisible(false);
        
        
    }
    
    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layoutPanel = new javax.swing.JLayeredPane();
        entryPanel = new javax.swing.JPanel();
        entryPanelTitle = new javax.swing.JLabel();
        entryPanelButton = new javax.swing.JButton();
        entryPanelScrollPanel = new javax.swing.JScrollPane();
        entryPanelText = new javax.swing.JTextArea();
        fullPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        missionLayeredPanel = new javax.swing.JLayeredPane();
        mission1Panel = new javax.swing.JPanel();
        m1Filebutton = new javax.swing.JButton();
        m1HashButton = new javax.swing.JButton();
        m1HashField = new javax.swing.JTextField();
        mission2Panel = new javax.swing.JPanel();
        m2ChoisirDic = new javax.swing.JLabel();
        m2ListDic = new javax.swing.JComboBox<String>();
        m2TextField = new javax.swing.JTextField();
        m2AutoButton = new javax.swing.JButton();
        m2AddWordButton = new javax.swing.JButton();
        m2Mission3Button = new javax.swing.JButton();
        mission3Panel = new javax.swing.JPanel();
        m3FillDicoButton = new javax.swing.JButton();
        m3AttackButton = new javax.swing.JButton();
        m3ConfirmButton = new javax.swing.JButton();
        m3PassField = new javax.swing.JTextField();
        m3FinButton = new javax.swing.JToggleButton();
        viewPanel = new javax.swing.JPanel();
        hackerLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        scrollInfoPane = new javax.swing.JScrollPane();
        infoPane = new javax.swing.JTextPane();
        scrollHackPane = new javax.swing.JScrollPane();
        hackerPane = new javax.swing.JTextPane();
        missionPlacePanel = new javax.swing.JLayeredPane();
        endPanel = new javax.swing.JPanel();
        lastPanelTitle = new javax.swing.JLabel();
        lastPanelScrollPanel = new javax.swing.JScrollPane();
        lastPanelText = new javax.swing.JTextArea();
        terminatePanelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1220, 570));

        layoutPanel.setPreferredSize(new java.awt.Dimension(1220, 570));
        layoutPanel.setSize(new java.awt.Dimension(1220, 570));

        entryPanel.setPreferredSize(new java.awt.Dimension(1220, 570));

        entryPanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        entryPanelTitle.setText("Bienvenue sur l'applet de Brute Force");

        entryPanelButton.setText("Commencer");
        entryPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryPanelButtonActionPerformed(evt);
            }
        });

        entryPanelScrollPanel.setBackground(new java.awt.Color(238, 238, 238));
        entryPanelScrollPanel.setBorder(null);

        entryPanelText.setEditable(false);
        entryPanelText.setBackground(new java.awt.Color(238, 238, 238));
        entryPanelText.setColumns(20);
        entryPanelText.setRows(5);
        entryPanelText.setText("Dans cette applet vous allez découvrir comment se passe une attaque par brute force. \n                 Vous allez devoir trouver un mot de passe que nous avons perdu. \n                            Dès que vous êtes près appuyez sur commencer");
        entryPanelText.setBorder(null);
        entryPanelScrollPanel.setViewportView(entryPanelText);

        javax.swing.GroupLayout entryPanelLayout = new javax.swing.GroupLayout(entryPanel);
        entryPanel.setLayout(entryPanelLayout);
        entryPanelLayout.setHorizontalGroup(
            entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryPanelLayout.createSequentialGroup()
                .addGap(549, 549, 549)
                .addComponent(entryPanelButton)
                .addGap(0, 552, Short.MAX_VALUE))
            .addGroup(entryPanelLayout.createSequentialGroup()
                .addGap(492, 492, 492)
                .addComponent(entryPanelTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entryPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(entryPanelScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(318, 318, 318))
        );
        entryPanelLayout.setVerticalGroup(
            entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entryPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(entryPanelTitle)
                .addGap(51, 51, 51)
                .addComponent(entryPanelScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(entryPanelButton)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        fullPanel.setPreferredSize(new java.awt.Dimension(1220, 570));

        controlPanel.setPreferredSize(new java.awt.Dimension(770, 570));

        missionLayeredPanel.setPreferredSize(new java.awt.Dimension(770, 135));

        mission1Panel.setPreferredSize(new java.awt.Dimension(770, 125));

        m1Filebutton.setText("fichier mot de passe");
        m1Filebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m1FilebuttonMouseClicked(evt);
            }
        });

        m1HashButton.setText("confirm hash");
        m1HashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m1HashButtonMouseClicked(evt);
            }
        });

        m1HashField.setForeground(new java.awt.Color(102, 102, 102));
        m1HashField.setText("Enter Hash");
        m1HashField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m1HashFieldMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mission1PanelLayout = new javax.swing.GroupLayout(mission1Panel);
        mission1Panel.setLayout(mission1PanelLayout);
        mission1PanelLayout.setHorizontalGroup(
            mission1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mission1PanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(mission1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mission1PanelLayout.createSequentialGroup()
                        .addComponent(m1HashField, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m1HashButton)
                        .addContainerGap(156, Short.MAX_VALUE))
                    .addGroup(mission1PanelLayout.createSequentialGroup()
                        .addComponent(m1Filebutton)
                        .addGap(0, 521, Short.MAX_VALUE))))
        );
        mission1PanelLayout.setVerticalGroup(
            mission1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mission1PanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(m1Filebutton)
                .addGap(50, 50, 50)
                .addGroup(mission1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m1HashButton)
                    .addComponent(m1HashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mission2Panel.setPreferredSize(new java.awt.Dimension(770, 125));

        m2ChoisirDic.setText("Choisir dictionnaire");

        m2ListDic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ListDicActionPerformed(evt);
            }
        });

        m2TextField.setForeground(new java.awt.Color(102, 102, 102));
        m2TextField.setText("Entrer un mot");
        m2TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2TextFieldMouseClicked(evt);
            }
        });

        m2AutoButton.setText("auto-generation");
        m2AutoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2AutoButtonMouseClicked(evt);
            }
        });

        m2AddWordButton.setText("ajouter mot au dictionnaire");
        m2AddWordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2AddWordButtonMouseClicked(evt);
            }
        });

        m2Mission3Button.setText("MISSION 3");
        m2Mission3Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2Mission3ButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mission2PanelLayout = new javax.swing.GroupLayout(mission2Panel);
        mission2Panel.setLayout(mission2PanelLayout);
        mission2PanelLayout.setHorizontalGroup(
            mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mission2PanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(m2ListDic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(m2ChoisirDic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mission2PanelLayout.createSequentialGroup()
                        .addComponent(m2AddWordButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mission2PanelLayout.createSequentialGroup()
                        .addComponent(m2Mission3Button)
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mission2PanelLayout.createSequentialGroup()
                        .addComponent(m2AutoButton)
                        .addGap(92, 92, 92))))
        );
        mission2PanelLayout.setVerticalGroup(
            mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mission2PanelLayout.createSequentialGroup()
                .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mission2PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(m2ChoisirDic))
                    .addGroup(mission2PanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(m2ListDic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m2AutoButton))))
                .addGap(18, 18, 18)
                .addGroup(mission2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m2AddWordButton)
                    .addComponent(m2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m2Mission3Button))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        mission3Panel.setPreferredSize(new java.awt.Dimension(770, 125));

        m3FillDicoButton.setText("remplir dictionnaire");
        m3FillDicoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3FillDicoButtonMouseClicked(evt);
            }
        });

        m3AttackButton.setText("lancer attaque");
        m3AttackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3AttackButtonMouseClicked(evt);
            }
        });

        m3ConfirmButton.setText("confirmer password");
        m3ConfirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3ConfirmButtonMouseClicked(evt);
            }
        });

        m3PassField.setForeground(new java.awt.Color(102, 102, 102));
        m3PassField.setText("Entrer le mot de passe");
        m3PassField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3PassFieldMouseClicked(evt);
            }
        });

        m3FinButton.setText("FIN");
        m3FinButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3FinButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mission3PanelLayout = new javax.swing.GroupLayout(mission3Panel);
        mission3Panel.setLayout(mission3PanelLayout);
        mission3PanelLayout.setHorizontalGroup(
            mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mission3PanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mission3PanelLayout.createSequentialGroup()
                        .addComponent(m3FillDicoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(m3AttackButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mission3PanelLayout.createSequentialGroup()
                        .addGroup(mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(m3FinButton)
                            .addComponent(m3PassField, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(m3ConfirmButton)))
                .addGap(62, 62, 62))
        );
        mission3PanelLayout.setVerticalGroup(
            mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mission3PanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m3FillDicoButton)
                    .addComponent(m3AttackButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mission3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m3ConfirmButton)
                    .addComponent(m3PassField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m3FinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout missionLayeredPanelLayout = new javax.swing.GroupLayout(missionLayeredPanel);
        missionLayeredPanel.setLayout(missionLayeredPanelLayout);
        missionLayeredPanelLayout.setHorizontalGroup(
            missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mission2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mission3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mission1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        missionLayeredPanelLayout.setVerticalGroup(
            missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(mission2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(mission3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
            .addGroup(missionLayeredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(missionLayeredPanelLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(mission1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        missionLayeredPanel.setLayer(mission1Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        missionLayeredPanel.setLayer(mission2Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        missionLayeredPanel.setLayer(mission3Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        viewPanel.setPreferredSize(new java.awt.Dimension(770, 385));

        hackerLabel.setText("hacker view");

        infoLabel.setText("info view");

        scrollInfoPane.setFocusable(false);

        infoPane.setFocusable(false);
        scrollInfoPane.setViewportView(infoPane);

        scrollHackPane.setFocusable(false);

        hackerPane.setEditable(false);
        scrollHackPane.setViewportView(hackerPane);

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(hackerLabel)
                .addGap(300, 300, 300)
                .addComponent(infoLabel)
                .addContainerGap(210, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollHackPane, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollInfoPane)
                .addContainerGap())
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hackerLabel)
                    .addComponent(infoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollInfoPane)
                    .addComponent(scrollHackPane, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
                .addContainerGap())
        );

        scrollInfoPane.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(missionLayeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addComponent(viewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(missionLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        missionPlacePanel.setMinimumSize(new java.awt.Dimension(450, 430));
        missionPlacePanel.setPreferredSize(new java.awt.Dimension(450, 570));
        missionPlacePanel.setSize(new java.awt.Dimension(450, 570));

        javax.swing.GroupLayout missionPlacePanelLayout = new javax.swing.GroupLayout(missionPlacePanel);
        missionPlacePanel.setLayout(missionPlacePanelLayout);
        missionPlacePanelLayout.setHorizontalGroup(
            missionPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        missionPlacePanelLayout.setVerticalGroup(
            missionPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout fullPanelLayout = new javax.swing.GroupLayout(fullPanel);
        fullPanel.setLayout(fullPanelLayout);
        fullPanelLayout.setHorizontalGroup(
            fullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullPanelLayout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(missionPlacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fullPanelLayout.setVerticalGroup(
            fullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullPanelLayout.createSequentialGroup()
                .addGroup(fullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(missionPlacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        endPanel.setPreferredSize(new java.awt.Dimension(1220, 570));

        lastPanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastPanelTitle.setText("BILAN ");

        lastPanelScrollPanel.setBackground(new java.awt.Color(238, 238, 238));
        lastPanelScrollPanel.setBorder(null);

        lastPanelText.setEditable(false);
        lastPanelText.setBackground(new java.awt.Color(238, 238, 238));
        lastPanelText.setColumns(20);
        lastPanelText.setRows(5);
        lastPanelText.setText("Points qui ont été vus : \n\n- Ce qu'est un fichier password et comment les mots de passe sont enregistrés\n\n- Comment sont conçus les dictionnaires permettant de trouver les mots de passe\n\n- Le déroulement d'une attaque, avec le logiciel \"John the Ripper\" ainsi que son lancement\nen ligne de commande\n\nCe qu'il faut retenir : \n\nil est très difficile de trouver un mot de passe quand aucune information ne peut y être\nassocié\n \nexemple : \n- ce n'est pas un mot existant (nom/prénom/mot du dictionnaire d'une langue)\n- ce n'est pas une date\n");
        lastPanelText.setBorder(null);
        lastPanelScrollPanel.setViewportView(lastPanelText);

        terminatePanelButton.setText("Terminer");
        terminatePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminatePanelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout endPanelLayout = new javax.swing.GroupLayout(endPanel);
        endPanel.setLayout(endPanelLayout);
        endPanelLayout.setHorizontalGroup(
            endPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(terminatePanelButton)
                .addGap(542, 542, 542))
            .addGroup(endPanelLayout.createSequentialGroup()
                .addGap(589, 589, 589)
                .addComponent(lastPanelTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endPanelLayout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(lastPanelScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(297, 297, 297))
        );
        endPanelLayout.setVerticalGroup(
            endPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(lastPanelTitle)
                .addGap(29, 29, 29)
                .addComponent(lastPanelScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(terminatePanelButton)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layoutPanelLayout = new javax.swing.GroupLayout(layoutPanel);
        layoutPanel.setLayout(layoutPanelLayout);
        layoutPanelLayout.setHorizontalGroup(
            layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layoutPanelLayout.createSequentialGroup()
                .addComponent(entryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layoutPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layoutPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layoutPanelLayout.setVerticalGroup(
            layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(entryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layoutPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(fullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layoutPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layoutPanel.setLayer(entryPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layoutPanel.setLayer(fullPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layoutPanel.setLayer(endPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void initMission(){
        System.out.println("## VIEW : initMission ##");
        
        mp = new MissionPanel(450,550,"MISSION");
        //mp.getPannelFrame().setPreferredSize(new java.awt.Dimension(300, 430));
        //mp.getPannelFrame().setSize(new java.awt.Dimension(300, 430));
        
        Mission mission1 = new Mission("mission 1","Trouver le HASH");
        mission1.addSubmission(new Submission("indice :","<html>Le hash se situe dans le fichier .password, il faut"
                + "<br> récupérer le hash intéressant!<html>"));
        mp.addMission(mission1);
        
        Mission mission2 = new Mission("mission 2","Construire le dictionnaire");
        mission2.addSubmission(new Submission("indice 1","<html>Il faut créer un dictionnaire des mots à tester pour"
                + "<br> éviter de tester toutes les combinaisons possibles.<html>"));
        mission2.addSubmission(new Submission("indice 2","le mot comporte 6 lettres, et vit au nord"));
        
        mp.addMission(mission2);
        
        Mission mission3 = new Mission("mission 3","L'attaque");
        mission3.addSubmission(new Submission("indice","<html>Le but est de lancer l'attaque, et de récupérer le mot"
                + "<br> de passe<html>"));
        mp.addMission(mission3);
        
        missionPlacePanel.add(mp.getPannelFrame(), javax.swing.JLayeredPane.DEFAULT_LAYER);
    }
    
    public void initDictList(){
        System.out.println("## VIEW : initDictList ##");
        for(String s : controller.getModel().getDictList()){
            m2ListDic.addItem(s);
        }
    }
    
    
    private void entryPanelButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_entryPanelButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("## VIEW : commencer > pressed ##");
        entryPanel.setVisible(false);
        initMission();
        initDictList();
        fullPanel.setVisible(true);
        mission2Panel.setVisible(false);
        mission3Panel.setVisible(false);
        mission1Panel.setVisible(true);
    }//GEN-LAST:event_entryPanelButtonActionPerformed
    
    /***************************************************************************/
    /*************************** MISSION 1 BUTTON ******************************/
    /***************************************************************************/
    
    private void m1FilebuttonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m1FilebuttonMouseClicked
        
        FileReader fr;
        BufferedReader br ;
        String newLine;
        
        System.out.println("## VIEW : m1FileButton > pressed ##");
        try{
            fr = new FileReader(controller.getModel().getPasswordFile());
            br = new BufferedReader(fr);
            
            System.out.println("## view : m1FileButton ... file initialized ##");
            
            infoView.insertString(infoView.getLength(),"<== Regardez comment les hackers font \n",infoStyle);
            hackerView.insertString(hackerView.getLength(),"hacker01~$ cat .password\n\n",cmdStyle);
            while((newLine = br.readLine()) != null){
                System.out.println("## view : m1FileButton ... reading line ##");
                hackerView.insertString(hackerView.getLength(),newLine+"\n",attackStyle);
            }
            
        }catch(FileNotFoundException e){
            System.err.println(e);
        }catch(BadLocationException exc){
            System.err.println(exc);
        }catch(IOException ex) {
            System.err.println(ex);
        }
        
    }//GEN-LAST:event_m1FilebuttonMouseClicked
    
    private void m1HashButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m1HashButtonMouseClicked
        // TODO add your handling code here:
        try{
            System.out.println("## VIEW : m1HashButton > pressed ##");
            if (controller.getModel().getPasswordManager().testHashUser(m1HashField.getText())){
                System.out.println("## VIEW : m1FileButton ... good hash ##");
                infoView.insertString(infoView.getLength(),"Bon hash\n",succeedStyle);
                mp.missionDone(1,true);
                infoView.insertString(infoView.getLength(),"Lisez la prochaine mission ==> \n",infoStyle);
                mission1Panel.setVisible(false);
                mission2Panel.setVisible(true);
                hackerPane.setText("");
                dictInitialize = true;
            }else{
                System.out.println("## VIEW : m1FileButton ... bad hash ##");
                infoView.insertString(infoView.getLength(),"Mauvais hash\n",errorStyle);
            }
        }catch(BadLocationException error){
            System.out.println(error);
        }
    }//GEN-LAST:event_m1HashButtonMouseClicked
    
    /***************************************************************************/
    /************************* MISSION 2 BUTTON ********************************/
    /***************************************************************************/
    
    private void m2AddWordButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m2AddWordButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m2AddWordButton > pressed ##");
        controller.performAddWordToDict(m2TextField.getText(),(String) m2ListDic.getSelectedItem());
        try {
            infoView.insertString(infoView.getLength(),"Le mot " + m2TextField.getText()+ " a été ajouté au dictionnaire " +(String) m2ListDic.getSelectedItem() + " \n",infoStyle);
            hackerView.insertString(hackerView.getLength(),"Les hackers ne font que du remplissage automatique avec des outils\n\n",cmdStyle);
        } catch (BadLocationException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_m2AddWordButtonMouseClicked
    
    private void m2Mission3ButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m2Mission3ButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m2Mission3Button > pressed ##");
        try {
            if(mission2FirstVisit == true){
                infoPane.setText("");
                hackerPane.setText("");
                infoView.insertString(infoView.getLength(),"Lisez la prochaine mission ==> \n\n",infoStyle);
                mp.missionDone(2, true);
                mission2FirstVisit = false;
            }
            infoView.insertString(infoView.getLength(),"RAPPEL : dictionnaire utilisé = "+ (String) m2ListDic.getSelectedItem() +"\n",infoStyle);
            dictionnary = (String) m2ListDic.getSelectedItem();
            
            infoView.insertString(infoView.getLength(),"<== Regarder comment les hackers font pour utiliser l'outil JOHN THE RIPPER \n",infoStyle);
            infoView.insertString(infoView.getLength(),"1) D'abord mettre le hash trouvé dans un fichier : hash.txt \n",infoStyle);
            infoView.insertString(infoView.getLength(),"2) Ensuite lancer la commande spécifiant : \n",infoStyle);
            infoView.insertString(infoView.getLength(),"> fichier texte \n>algorithme de hashage utilisé \n>le dictionnaire\n\n",infoStyle);
            
            hackerView.insertString(hackerView.getLength(),"hacker01~$ echo " + controller.getModel().getPasswordManager().getHashStored() + " >> hash.txt \n",cmdStyle);
            hackerView.insertString(hackerView.getLength(),"hacker01~$ john --format=md5 --wordlist="+(String) m2ListDic.getSelectedItem()+" hash.txt \n",cmdStyle);
            hackerView.insertString(hackerView.getLength(),"Explication commande : \n"
                    + "--format : algorithme de hashage utilisé \n"
                    + "--wordlist : dictionnaire utilisé \n",cmdStyle);
            
            
        } catch (BadLocationException ex) {
            System.err.println(ex);
        }
        mission2Panel.setVisible(false);
        mission3Panel.setVisible(true);
        
    }//GEN-LAST:event_m2Mission3ButtonMouseClicked
    
    private void m2AutoButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m2AutoButtonMouseClicked
        // TODO add your handling code here:
        try {
            infoView.insertString(infoView.getLength(),"<== Regarder comment les hackers font pour utiliser l'outil CRUNCH \n",infoStyle);
            hackerView.insertString(hackerView.getLength(),"hacker01~$ ./crunch 6 6 -f charset.lst lalpha -d 1@ >> " + (String) m2ListDic.getSelectedItem() + " \n",cmdStyle);
            hackerView.insertString(hackerView.getLength(),"Explication commande : \n"
                    + "1er chiffre : longueur minimale des mots \n"
                    + "2eme chiffre : longueur maximale des mots \n"
                    + "-f charset.lst lalpha : utilisation d'un certain nombre de lettre possible (alphabet en minuscule) \n"
                    + "-d 1@ : pas deux fois la même lettre côte à côte\n\n",cmdStyle);
            
            new Thread(new Runnable() {
                public void run() {
                    controller.launchAutoGenerator((String) m2ListDic.getSelectedItem());
                }
            }).start();
            
            
        } catch (BadLocationException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_m2AutoButtonMouseClicked
    
    /***************************************************************************/
    /************************* MISSION 3 BUTTON ********************************/
    /***************************************************************************/
    
    private void m3FillDicoButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m3FillDicoButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m3FillDicoButton > pressed ##");
        try {
            infoView.insertString(infoView.getLength(),"Entrez de nouveaux mots dans le dictionnaire \n",infoStyle);
        } catch (BadLocationException ex) {
            System.err.println(ex);
        }
        mission3Panel.setVisible(false);
        mission2Panel.setVisible(true);
        hackerPane.setText("");
    }//GEN-LAST:event_m3FillDicoButtonMouseClicked
    
    private void m3AttackButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m3AttackButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m3AttackButton > pressed ##");
        
        new Thread(new Runnable() {
            public void run() {
                controller.performAttack(dictionnary);
            }
        }).start();
    }//GEN-LAST:event_m3AttackButtonMouseClicked
    
    private void m3ConfirmButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m3ConfirmButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m3ConfirmButton > pressed ##");
        System.out.println("## VIEW : __ passfield = "+m3PassField.getText()+" __ passwordFound = "+controller.getModel().getPasswordManager().getPasswordFound()+" > pressed ##");
        if(m3PassField.getText().equals(controller.getModel().getPasswordManager().getPasswordFound())){
            try {
                infoView.insertString(infoView.getLength(),"Bon password\n",succeedStyle);
                mp.missionDone(3, true);
                infoView.insertString(infoView.getLength(),"** FIN **\n",infoStyle);
            } catch (BadLocationException ex) {
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_m3ConfirmButtonMouseClicked
    
    /***************************************************************************/
    /*************************** OTHER BUTTON **********************************/
    /***************************************************************************/
    
    private void m3FinButtonMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m3FinButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m3FinButtonMouseClicked > pressed ##");
        fullPanel.setVisible(false);
        endPanel.setVisible(true);
    }//GEN-LAST:event_m3FinButtonMouseClicked
    
    /* TEXT FIELD EVENT */
    private void m1HashFieldMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m1HashFieldMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m1HashFieldMouseClicked > pressed ##");
        m1HashField.setText("");
    }//GEN-LAST:event_m1HashFieldMouseClicked
    
    private void m2TextFieldMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m2TextFieldMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m1TextFieldMouseClicked > pressed ##");
        m2TextField.setText("");
    }//GEN-LAST:event_m2TextFieldMouseClicked
    
    private void m3PassFieldMouseClicked(MouseEvent evt) {//GEN-FIRST:event_m3PassFieldMouseClicked
        // TODO add your handling code here:
        System.out.println("## VIEW : m3PassFieldMouseClicked > pressed ##");
        m3PassField.setText("");
    }//GEN-LAST:event_m3PassFieldMouseClicked

    private void m2ListDicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ListDicActionPerformed
        // TODO add your handling code here:
        System.out.println("## VIEW : m2ListDic > pressed ##");
        if(dictInitialize == true){
            try{
                infoView.insertString(infoView.getLength(),"Dictionnaire choisi = "+ m2ListDic.getSelectedItem()+"\n", infoStyle);
            }catch(BadLocationException ex){
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_m2ListDicActionPerformed

    private void terminatePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminatePanelButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("## VIEW : terminateButton > pressed ##");
        controller.performCloseApplet();
        this.dispose();
    }//GEN-LAST:event_terminatePanelButtonActionPerformed
        
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlPanel;
    private javax.swing.JPanel endPanel;
    private javax.swing.JPanel entryPanel;
    private javax.swing.JButton entryPanelButton;
    private javax.swing.JScrollPane entryPanelScrollPanel;
    private javax.swing.JTextArea entryPanelText;
    private javax.swing.JLabel entryPanelTitle;
    private javax.swing.JPanel fullPanel;
    private javax.swing.JLabel hackerLabel;
    private javax.swing.JTextPane hackerPane;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JTextPane infoPane;
    private javax.swing.JScrollPane lastPanelScrollPanel;
    private javax.swing.JTextArea lastPanelText;
    private javax.swing.JLabel lastPanelTitle;
    private javax.swing.JLayeredPane layoutPanel;
    private javax.swing.JButton m1Filebutton;
    private javax.swing.JButton m1HashButton;
    private javax.swing.JTextField m1HashField;
    private javax.swing.JButton m2AddWordButton;
    private javax.swing.JButton m2AutoButton;
    private javax.swing.JLabel m2ChoisirDic;
    private javax.swing.JComboBox<String> m2ListDic;
    private javax.swing.JButton m2Mission3Button;
    private javax.swing.JTextField m2TextField;
    private javax.swing.JButton m3AttackButton;
    private javax.swing.JButton m3ConfirmButton;
    private javax.swing.JButton m3FillDicoButton;
    private javax.swing.JToggleButton m3FinButton;
    private javax.swing.JTextField m3PassField;
    private javax.swing.JPanel mission1Panel;
    private javax.swing.JPanel mission2Panel;
    private javax.swing.JPanel mission3Panel;
    private javax.swing.JLayeredPane missionLayeredPanel;
    private javax.swing.JLayeredPane missionPlacePanel;
    private javax.swing.JScrollPane scrollHackPane;
    private javax.swing.JScrollPane scrollInfoPane;
    private javax.swing.JButton terminatePanelButton;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
    
    
    @Override
    public void setController(Controller c) {
        this.controller=c;
    }
    
    @Override
    public Controller getController() {
        return controller;
    }
    
    @Override
    public void printMessage(String view, String message,String style){
        try {
            if(view.equals("infoView")){
                
                switch(style){
                    case "errorStyle" :
                        infoView.insertString(infoView.getLength(),message,errorStyle);
                        break;
                    case "succeedStyle" :
                        infoView.insertString(infoView.getLength(),message,succeedStyle);
                        break;
                    default :
                        infoView.insertString(infoView.getLength(),message,infoStyle);
                        break;
                }
                
            }else{
                hackerView.insertString(hackerView.getLength(),message,cmdStyle);
            }
            
        } catch (BadLocationException ex) {
            System.err.println(ex);
        }
    }
    
    @Override
    public void newMessage(){
        hackerPane.setText("");
    }
}
